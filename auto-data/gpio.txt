################################################################################
##
## Filename: 	gpio.txt
##
## Project:	TinyZip, a demonstration project for the TinyFPGA B2 board
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2018, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=gpio
@DEVID=GPIO
@NADDR=1
@ACCESS=GPIO_ACCESS
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb
@NUMOUTPUT=11
@NUMINPUT=11
@INT.GPIO.WIRE=gpio_int
@INT.GPIO.PIC=buspic
@TOP.PORTLIST=
		// GPIO ports
		i_gpio, o_gpio, o_led
@TOP.IODECL=
	localparam	NGPI = @$(NUMINPUT), NGPO=@$(NUMOUTPUT);
	// GPIO ports
	input		[(@$(NUMINPUT)-1):0]	i_gpio;
	output	wire	[(@$(NUMOUTPUT)-1):1]	o_gpio;
	output	wire				o_led;
@TOP.MAIN=
		// GPIO wires
		i_gpio, { o_gpio, o_led }
@MAIN.PORTLIST=
		// GPIO ports
		i_@$(PREFIX), o_@$(PREFIX)
@MAIN.IODECL=
	localparam	NGPI = @$(NUMINPUT), NGPO=@$(NUMOUTPUT);
	// @$(DEVID) ports
	input		[(NGPI-1):0]	i_@$(PREFIX);
	output	wire	[(NGPO-1):0]	o_@$(PREFIX);
@MAIN.INSERT=
	//
	// @$(DEVID)
	//
	// This interface should allow us to control up to 16 @$(DEVID) inputs, and
	// another 16 @$(DEVID) outputs.  The interrupt trips when any of the inputs
	// changes.  (Sorry, which input isn't (yet) selectable.)
	//
	localparam	INITIAL_@$(DEVID) = @$(NUMOUTPUT)'h0;
	wbgpio	#(NGPI, NGPO, INITIAL_@$(DEVID))
		@$(PREFIX)i(i_clk, 1'b1, (wb_stb)&&(@$(PREFIX)_sel), wb_we,
			wb_data, @$(PREFIX)_data, i_@$(PREFIX), o_@$(PREFIX),
			@$(PREFIX)_int);
@REGS.N=1
@REGS.0= 0 R_@$(DEVID) @$(DEVID) GPI GPO
@BDEF.DEFN=
//
// @$(DEVID) input wires
//
#define	@$(DEVID)_BTN	0x00001
// @$(DEVID) output wires
//
#define	@$(DEVID)_IN(WIRE)	(((WIRE)>>16)&1)
#define	@$(DEVID)_SET(WIRE)	(((WIRE)<<16)|(WIRE))
#define	@$(DEVID)_CLR(WIRE)	 ((WIRE)<<16)
//
#define	@$(DEVID)_LED		0x000000001
//
#define	@$(DEVID)_LED_SET	GPIO_SET(GPIO_LED)
#define	@$(DEVID)_LED_CLR	GPIO_CLR(GPIO_LED)
//
@BDEF.IONAME=	i_@$(PREFIX)
@BDEF.IOTYPE=	unsigned
@BDEF.OSDEF=	_BOARD_HAS_@$(DEVID)
@BDEF.OSVAL=	static volatile @$.BDEF.IOTYPE *const _@$(PREFIX) = ((@$.BDEF.IOTYPE *)@$REGBASE);
@RTL.MAKE.FILES=wbgpio.v
@RTL.MAKE.GROUP=@$(DEVID)
